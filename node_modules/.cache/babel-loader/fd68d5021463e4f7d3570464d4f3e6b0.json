{"ast":null,"code":"'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n  var symToStr = Symbol.prototype.toString;\n  var symStringRegex = /^Symbol\\(.*\\)$/;\n\n  var isSymbolObject = function isRealSymbolObject(value) {\n    if (typeof value.valueOf() !== 'symbol') {\n      return false;\n    }\n\n    return symStringRegex.test(symToStr.call(value));\n  };\n\n  module.exports = function isSymbol(value) {\n    if (typeof value === 'symbol') {\n      return true;\n    }\n\n    if (toStr.call(value) !== '[object Symbol]') {\n      return false;\n    }\n\n    try {\n      return isSymbolObject(value);\n    } catch (e) {\n      return false;\n    }\n  };\n} else {\n  module.exports = function isSymbol(value) {\n    // this environment does not support Symbols.\n    return false && value;\n  };\n}","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Documents/GitHub/daily-daffodil/node_modules/is-symbol/index.js"],"names":["toStr","Object","prototype","toString","hasSymbols","require","symToStr","Symbol","symStringRegex","isSymbolObject","isRealSymbolObject","value","valueOf","test","call","module","exports","isSymbol","e"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAA7B;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAP,EAAjB;;AAEA,IAAID,UAAJ,EAAgB;AACf,MAAIE,QAAQ,GAAGC,MAAM,CAACL,SAAP,CAAiBC,QAAhC;AACA,MAAIK,cAAc,GAAG,gBAArB;;AACA,MAAIC,cAAc,GAAG,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACvD,QAAI,OAAOA,KAAK,CAACC,OAAN,EAAP,KAA2B,QAA/B,EAAyC;AACxC,aAAO,KAAP;AACA;;AACD,WAAOJ,cAAc,CAACK,IAAf,CAAoBP,QAAQ,CAACQ,IAAT,CAAcH,KAAd,CAApB,CAAP;AACA,GALD;;AAOAI,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBN,KAAlB,EAAyB;AACzC,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC9B,aAAO,IAAP;AACA;;AACD,QAAIX,KAAK,CAACc,IAAN,CAAWH,KAAX,MAAsB,iBAA1B,EAA6C;AAC5C,aAAO,KAAP;AACA;;AACD,QAAI;AACH,aAAOF,cAAc,CAACE,KAAD,CAArB;AACA,KAFD,CAEE,OAAOO,CAAP,EAAU;AACX,aAAO,KAAP;AACA;AACD,GAZD;AAaA,CAvBD,MAuBO;AAENH,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBN,KAAlB,EAAyB;AACzC;AACA,WAAO,SAASA,KAAhB;AACA,GAHD;AAIA","sourcesContent":["'use strict';\r\n\r\nvar toStr = Object.prototype.toString;\r\nvar hasSymbols = require('has-symbols')();\r\n\r\nif (hasSymbols) {\r\n\tvar symToStr = Symbol.prototype.toString;\r\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\r\n\tvar isSymbolObject = function isRealSymbolObject(value) {\r\n\t\tif (typeof value.valueOf() !== 'symbol') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn symStringRegex.test(symToStr.call(value));\r\n\t};\r\n\r\n\tmodule.exports = function isSymbol(value) {\r\n\t\tif (typeof value === 'symbol') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (toStr.call(value) !== '[object Symbol]') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn isSymbolObject(value);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n} else {\r\n\r\n\tmodule.exports = function isSymbol(value) {\r\n\t\t// this environment does not support Symbols.\r\n\t\treturn false && value;\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"script"}